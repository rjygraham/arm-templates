{
	"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"location": {
			"type": "string",
			"defaultValue": "[resourceGroup().location]",
			"metadata": {
				"description": "Region to which the resources will be deployed."
			}
		},
		"vmStartTag": {
			"type": "string",
			"defaultValue": "StartCron",
			"metadata": {
				"description": "VM tag name that contains the crontab expression describing when the VM should be started."
			}
		},
		"vmDeallocateTag": {
			"type": "string",
			"defaultValue": "DeallocateCron",
			"metadata": {
				"description": "VM tag name that contains the crontab expression describing when the VM should be deallocated."
			}
		},
		"storageAccountName": {
			"type": "string",
			"metadata": {
				"description": "Name of the Storage Account to be used for queuing between the discovery Logic App and the processing Logic App."
			}
		},
		"discoveryLogicAppName": {
			"type": "String",
			"metadata": {
				"description": "Name of the Logic App to discover VMs to be started or deallocated based on crontab expression"
			}
		},
		"discoveryLogicAppRecurrenceHours": {
			"type": "array",
			"defaultValue": [
				0,
				1,
				2,
				3,
				4,
				5,
				6,
				7,
				8,
				9,
				10,
				11,
				12,
				13,
				14,
				15,
				16,
				17,
				18,
				19,
				20,
				21,
				22,
				23
			],
			"metadata": {
				"description": "The hours of day which the discovery Logic App should trigger."
			}
		},
		"discoveryLogicAppRecurrenceMinutes": {
			"type": "array",
			"defaultValue": [
				0,
				15,
				30,
				45
			],
			"metadata": {
				"description": "The minutes of each hour which the discovery Logic App should trigger."
			}
		},
		"processorLogicAppName": {
			"type": "string",
			"metadata": {
				"description": "Name of the Logic App to process VM start or deallocated messages on the queue."
			}
		}
	},
	"variables": {
		"storageAccountResourceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
		"storageAccountQueueName": "vmactions",
		"azureQueuesConnectionName": "azurequeues",
		"azureQueuesConnectionResourceId": "[resourceId('Microsoft.Web/connections', variables('azureQueuesConnectionName'))]",
		"azureQueuesManagedApisResourceId": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/azurequeues')]"
	},
	"resources": [
		{
			"type": "Microsoft.Storage/storageAccounts",
			"apiVersion": "2019-06-01",
			"name": "[parameters('storageAccountName')]",
			"location": "[parameters('location')]",
			"sku": {
				"name": "Standard_LRS",
				"tier": "Standard"
			},
			"kind": "StorageV2",
			"properties": {
				"networkAcls": {
					"bypass": "AzureServices",
					"virtualNetworkRules": [],
					"ipRules": [],
					"defaultAction": "Allow"
				},
				"supportsHttpsTrafficOnly": true,
				"encryption": {
					"services": {
						"file": {
							"keyType": "Account",
							"enabled": true
						},
						"blob": {
							"keyType": "Account",
							"enabled": true
						}
					},
					"keySource": "Microsoft.Storage"
				},
				"accessTier": "Hot"
			}
		},
		{
			"type": "Microsoft.Storage/storageAccounts/queueServices",
			"name": "[concat(parameters('storageAccountName'), '/default')]",
			"apiVersion": "2019-06-01",
			"dependsOn": [
				"[variables('storageAccountResourceId')]"
			],
			"properties": {
			},
			"resources": [
				{
					"type": "queues",
					"apiVersion": "2019-06-01",
					"name": "[variables('storageAccountQueueName')]",
					"dependsOn": [
						"[resourceId('Microsoft.Storage/storageAccounts/queueServices', parameters('storageAccountName'), 'default')]"
					],
					"properties": {
					}
				}
			]
		},
		{
			"type": "Microsoft.Web/connections",
			"apiVersion": "2018-07-01-preview",
			"name": "[variables('azureQueuesConnectionName')]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[variables('storageAccountResourceId')]"
			],
			"properties": {
				"displayName": "QueueConnection",
				"api": {
					"id": "[variables('azureQueuesManagedApisResourceId')]"
				},
				"parameterValues": {
					"storageaccount": "[parameters('storageAccountName')]",
					"sharedkey": "[listKeys(variables('storageAccountResourceId'), '2019-06-01').keys[0].value]"
				}
			}
		},
		{
			"type": "Microsoft.Logic/workflows",
			"apiVersion": "2017-07-01",
			"name": "[parameters('discoveryLogicAppName')]",
			"location": "eastus",
			"dependsOn": [
				"[variables('azureQueuesConnectionResourceId')]"
			],
			"identity": {
				"type": "SystemAssigned"
			},
			"properties": {
				"state": "Enabled",
				"definition": {
					"$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
					"contentVersion": "1.0.0.0",
					"parameters": {
						"$connections": {
							"defaultValue": {},
							"type": "Object"
						}
					},
					"triggers": {
						"Recurrence": {
							"recurrence": {
								"frequency": "Day",
								"interval": 1,
								"schedule": {
									"hours": "[parameters('discoveryLogicAppRecurrenceHours')]",
									"minutes": "[parameters('discoveryLogicAppRecurrenceMinutes')]"
								},
								"timeZone": "UTC"
							},
							"type": "Recurrence"
						}
					},
					"actions": {
						"Execute_Resource_Graph_Query": {
							"runAfter": {
								"For_each_Subscription": [
									"Succeeded"
								]
							},
							"type": "Http",
							"inputs": {
								"authentication": {
									"audience": "https://management.azure.com/",
									"type": "ManagedServiceIdentity"
								},
								"body": {
									"query": "[concat('Resources | where type =~ ''microsoft.compute/virtualmachines'' and tags.', parameters('vmStartTag'), ' matches regex @{variables(''regex'')} | project action = strcat(id, ''/start'') | union (Resources | where type =~ ''microsoft.compute/virtualmachines'' and tags.', parameters('vmDeallocateTag'), ' matches regex @{variables(''regex'')} | project action = strcat(id, ''/deallocate''))')]",
									"subscriptions": "@variables('subscriptions')"
								},
								"method": "POST",
								"uri": "https://management.azure.com/providers/Microsoft.ResourceGraph/resources?api-version=2018-09-01-preview"
							}
						},
						"For_each_Resource_Graph_Query_row": {
							"foreach": "@body('Execute_Resource_Graph_Query')?['data']?['rows']",
							"actions": {
								"Put_a_message_on_a_queue": {
									"runAfter": {},
									"type": "ApiConnection",
									"inputs": {
										"body": "@{items('For_each_Resource_Graph_Query_row')[0]}",
										"host": {
											"connection": {
												"name": "@parameters('$connections')['azurequeues']['connectionId']"
											}
										},
										"method": "post",
										"path": "[concat('/@{encodeURIComponent(''', variables('storageAccountQueueName'), ''')}/messages')]"
									}
								}
							},
							"runAfter": {
								"Execute_Resource_Graph_Query": [
									"Succeeded"
								]
							},
							"type": "Foreach"
						},
						"For_each_Subscription": {
							"foreach": "@body('Get_Subscriptions')?['value']",
							"actions": {
								"Append_Subscription_ID": {
									"runAfter": {},
									"type": "AppendToArrayVariable",
									"inputs": {
										"name": "subscriptions",
										"value": "@items('For_each_Subscription')?['subscriptionId']"
									}
								}
							},
							"runAfter": {
								"Get_Subscriptions": [
									"Succeeded"
								]
							},
							"type": "Foreach",
							"runtimeConfiguration": {
								"concurrency": {
									"repetitions": 1
								}
							}
						},
						"Get_Subscriptions": {
							"runAfter": {
								"Initialize_regex_variable": [
									"Succeeded"
								]
							},
							"type": "Http",
							"inputs": {
								"authentication": {
									"audience": "https://management.azure.com/",
									"type": "ManagedServiceIdentity"
								},
								"method": "GET",
								"uri": "https://management.azure.com/subscriptions?api-version=2016-06-01"
							}
						},
						"Initialize_regex_variable": {
							"runAfter": {
								"Initialize_subscriptions_variable": [
									"Succeeded"
								]
							},
							"type": "InitializeVariable",
							"inputs": {
								"variables": [
									{
										"name": "regex",
										"type": "string",
										"value": "@{concat('''', concat(concat(concat(concat(concat(formatNumber(int(utcNow('mm')), '#0'), '\\\\s'), formatNumber(int(utcNow('HH')), '#0')), '\\\\s\\\\*\\\\s\\\\*\\\\s([0-6]|,)*'), dayOfWeek(utcNow())), '([0-6]|,)*'''))}"
									}
								]
							}
						},
						"Initialize_subscriptions_variable": {
							"runAfter": {},
							"type": "InitializeVariable",
							"inputs": {
								"variables": [
									{
										"name": "subscriptions",
										"type": "array",
										"value": []
									}
								]
							}
						}
					},
					"outputs": {}
				},
				"parameters": {
					"$connections": {
						"value": {
							"azurequeues": {
								"connectionId": "[variables('azureQueuesConnectionResourceId')]",
								"connectionName": "[variables('azureQueuesConnectionName')]",
								"id": "[variables('azureQueuesManagedApisResourceId')]"
							}
						}
					}
				}
			}
		},
		{
			"type": "Microsoft.Logic/workflows",
			"apiVersion": "2017-07-01",
			"name": "[parameters('processorLogicAppName')]",
			"location": "eastus",
			"dependsOn": [
				"[variables('azureQueuesConnectionResourceId')]"
			],
			"identity": {
				"type": "SystemAssigned"
			},
			"properties": {
				"state": "Enabled",
				"definition": {
					"$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
					"contentVersion": "1.0.0.0",
					"parameters": {
						"$connections": {
							"defaultValue": {},
							"type": "Object"
						}
					},
					"triggers": {
						"When_there_are_messages_in_a_queue": {
							"recurrence": {
								"frequency": "Second",
								"interval": 30
							},
							"splitOn": "@triggerBody()?['QueueMessagesList']?['QueueMessage']",
							"type": "ApiConnection",
							"inputs": {
								"host": {
									"connection": {
										"name": "@parameters('$connections')['azurequeues']['connectionId']"
									}
								},
								"method": "get",
								"path": "[concat('/@{encodeURIComponent(''', variables('storageAccountQueueName'), ''')}/message_trigger')]"
							}
						}
					},
					"actions": {
						"Delete_message": {
							"runAfter": {
								"POST_VM_Action": [
									"Succeeded"
								]
							},
							"type": "ApiConnection",
							"inputs": {
								"host": {
									"connection": {
										"name": "@parameters('$connections')['azurequeues']['connectionId']"
									}
								},
								"method": "delete",
								"path": "/@{encodeURIComponent('actions')}/messages/@{encodeURIComponent(triggerBody()?['MessageId'])}",
								"queries": {
									"popreceipt": "@triggerBody()?['PopReceipt']"
								}
							}
						},
						"POST_VM_Action": {
							"runAfter": {},
							"type": "Http",
							"inputs": {
								"authentication": {
									"audience": "https://management.azure.com/",
									"type": "ManagedServiceIdentity"
								},
								"method": "POST",
								"uri": "https://management.azure.com@{triggerBody()?['MessageText']}?api-version=2019-12-01"
							}
						}
					},
					"outputs": {}
				},
				"parameters": {
					"$connections": {
						"value": {
							"azurequeues": {
								"connectionId": "[variables('azureQueuesConnectionResourceId')]",
								"connectionName": "[variables('azureQueuesConnectionName')]",
								"id": "[variables('azureQueuesManagedApisResourceId')]"
							}
						}
					}
				}
			}
		}
	]
}